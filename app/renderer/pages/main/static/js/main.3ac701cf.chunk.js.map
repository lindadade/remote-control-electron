{"version":3,"sources":["../external \"electron\"","peer-puppet.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","require","getScreenStream","a","desktopCapturer","getSources","types","sources","Promise","resolve","reject","navigator","webkitGetUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","maxWidth","window","screen","width","maxHeight","height","stream","err","console","log","pc","RTCPeerConnection","ondatachannel","e","channel","onmessage","JSON","parse","data","type","ipcRenderer","send","onicecandidate","stringify","candidate","on","addIceCandidate","candidates","push","remoteDescription","i","length","RTCIceCandidate","createAnswer","offer","screenSteam","addStream","setRemoteDescription","setLocalDescription","localDescription","answer","sdp","App","useState","remoteCode","setRemoteCode","localCode","setLocalCode","controlText","setControlText","login","invoke","code","handleControlState","name","text","useEffect","removeListener","className","onContextMenu","preventDefault","Menu","remote","MenuItem","menu","append","label","role","click","menuItem","win","keyboardEvent","popup","handleContextMenu","value","onChange","target","onClick","startControl","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ac701cf.chunk.js","sourcesContent":["module.exports = require(\"electron\");","// createAnswer\n// addStream\nimport {desktopCapturer, ipcRenderer} from 'electron'\n\nasync function getScreenStream() {\n  const sources = await desktopCapturer.getSources({types: ['screen']})\n  return new Promise((resolve, reject) => {\n    navigator.webkitGetUserMedia({\n      audio: false,\n      video: {\n        mandatory: {\n          chromeMediaSource: 'desktop',\n          chromeMediaSourceId: sources[0].id,\n          maxWidth: window.screen.width,\n          maxHeight: window.screen.height\n        }\n      }\n    }, (stream) => {\n      resolve(stream)\n    }, (err) => {\n      console.log(err)\n    })\n  })\n}\n\nconst pc = new window.RTCPeerConnection({})\npc.ondatachannel = (e) => {\n  console.log('datachannel', e)\n  e.channel.onmessage = (e) => {\n    let { type, data } = JSON.parse(e.data)\n    if (type === 'mouse') {\n      data.screen = { width: window.screen.width, height: window.screen.height }\n    }\n    ipcRenderer.send('robot', type, data)\n  }\n}\npc.onicecandidate = function (e) {\n  console.log('candidate', JSON.stringify(e.candidate))\n  if (e.candidate) {\n    ipcRenderer.send('forward', 'puppet-candidate', JSON.stringify(e.candidate))\n  }\n}\nipcRenderer.on('candidate', (e, candidate) => {\n  addIceCandidate(candidate)\n})\nlet candidates = []\nasync function addIceCandidate(candidate) {\n  candidate && candidates.push(candidate)\n  if (pc.remoteDescription?.type) {\n    for (let i = 0; i < candidates.length; i++) {\n      await pc.addIceCandidate(new RTCIceCandidate(candidates[i]))\n    }\n    candidates = []\n  }\n}\nwindow.addIceCandidate = addIceCandidate\nipcRenderer.on('offer', async (e, offer) => {\n  let answer = await createAnswer(offer)\n  ipcRenderer.send('forward', 'answer', {type: answer.type, sdp: answer.sdp})\n})\n\nasync function createAnswer(offer) {\n  let screenSteam = await getScreenStream()\n  pc.addStream(screenSteam)\n  await pc.setRemoteDescription(offer)\n  await pc.setLocalDescription(await pc.createAnswer())\n  console.log('answer', JSON.stringify(pc.localDescription))\n  return pc.localDescription\n}\nwindow.createAnswer = createAnswer\n","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport {ipcRenderer, remote} from 'electron'\nimport './peer-puppet'\n\nfunction App() {\n  const [remoteCode, setRemoteCode] = useState('');\n  const [localCode, setLocalCode] = useState('');\n  // 0未连接，1已控制，2被控制\n  const [controlText, setControlText] = useState('');\n\n  const startControl = (remoteCode) => {\n    ipcRenderer.send('control', remoteCode)\n  }\n  const login = async () => {\n    let code = await ipcRenderer.invoke('login')\n    setLocalCode(code)\n  }\n\n  const handleControlState = (e, name, type) => {\n    let text = ''\n    if(type === 1) {\n      text = `正在远程控制${name}`\n    } else if(type === 2) {\n      text = `被${name}控制中`\n    } else {\n      text = ''\n    }\n    setControlText(text)\n  }\n\n  useEffect(() => {\n    login()\n    ipcRenderer.on('control-state-change', handleControlState)\n    return () => {\n      ipcRenderer.removeListener('control-state-change', handleControlState)\n    }\n  }, [])\n\n  const handleContextMenu = (e) => {\n    e.preventDefault()\n    const { Menu, MenuItem  } = remote\n    const menu = new Menu()\n    menu.append(new MenuItem({ label: '复制', role: 'copy' }))\n    menu.append(new MenuItem({ label: '分享到微信', click: (menuItem, win, keyboardEvent)=>{\n        ipcRenderer.send('share-to-wechat', localCode)\n      }}))\n    menu.popup()\n  }\n\n  return (\n      <div className=\"App\">\n        {\n          controlText === '' ? <>\n            <div>你的控制码 <span onContextMenu={(e) => handleContextMenu(e)}> {localCode} (分享/复制) </span></div>\n            <input type=\"text\" value={remoteCode} onChange={(e) => setRemoteCode(e.target.value)}/>\n            <button onClick={() => {startControl(remoteCode)}}>确认</button>\n          </> : <div>{controlText}</div>\n        }\n      </div>\n  );\n}\n\nexport default App;\n\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}